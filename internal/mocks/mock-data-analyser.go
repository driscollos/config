// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/driscollos/config/internal/analyser (interfaces: Analyser)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	structs "github.com/driscollos/config/internal/structs"
	gomock "github.com/golang/mock/gomock"
)

// MockAnalyser is a mock of Analyser interface.
type MockAnalyser struct {
	ctrl     *gomock.Controller
	recorder *MockAnalyserMockRecorder
}

// MockAnalyserMockRecorder is the mock recorder for MockAnalyser.
type MockAnalyserMockRecorder struct {
	mock *MockAnalyser
}

// NewMockAnalyser creates a new mock instance.
func NewMockAnalyser(ctrl *gomock.Controller) *MockAnalyser {
	mock := &MockAnalyser{ctrl: ctrl}
	mock.recorder = &MockAnalyserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnalyser) EXPECT() *MockAnalyserMockRecorder {
	return m.recorder
}

// Analyse mocks base method.
func (m *MockAnalyser) Analyse(arg0 interface{}) []structs.FieldDefinition {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Analyse", arg0)
	ret0, _ := ret[0].([]structs.FieldDefinition)
	return ret0
}

// Analyse indicates an expected call of Analyse.
func (mr *MockAnalyserMockRecorder) Analyse(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Analyse", reflect.TypeOf((*MockAnalyser)(nil).Analyse), arg0)
}
